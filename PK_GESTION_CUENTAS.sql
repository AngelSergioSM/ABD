--RF5 Y RF9
-- ====== CABECERAS ======
CREATE OR REPLACE PACKAGE PK_GESTION_CUENTAS AS

    
    --RF5 FUNCIONAL
    PROCEDURE ABRIRCUENTA(
            CU_IBAN             CUENTA.IBAN%TYPE,          --OBLIGATORIO
            CU_SWIFT            CUENTA.SWIFT%TYPE,         --OPCIONAL
            CU_TIPO             CUENTA_FINTECH.CLASIFICACION%TYPE, --OBLIGATORIO
            CU_CLAS             CUENTA_FINTECH.CLASIFICACION%TYPE, --OPCIONAL. ?
            CU_COMISION         SEGREGADA.COMISION%TYPE,   --OPCIONAL 
            ID_CLIENTE          CLIENTE.ID%TYPE,           --OBLIGATORIO
            CREF_IBAN           CUENTA.IBAN%TYPE   --OBLIGATORIO SI ES SEGREGADA
    );
    
    --RF9 PENDIENTE DE PRUEBAS
    -- SE CERRARAN CUENTAS POOLED O SEGREGADA
    -- Â¿Se puede cerrar fintech sin ser pooled o segregada?
    -- Mirar linea 118
    PROCEDURE CERRARCUENTA(CU_IBAN CUENTA.IBAN%TYPE);

PARAMETROS_INCORRECTOS_EXCEPTION EXCEPTION;
CUENTA_EXISTENTE_EXCEPTION EXCEPTION;
CUENTA_INCORRECTA_EXCEPTION EXCEPTION;
SALDO_POSITIVO_EXCEPTION EXCEPTION;
    
END PK_GESTION_CUENTAS;
/




-- ====== CUERPO ======
CREATE OR REPLACE PACKAGE BODY PK_GESTION_CUENTAS AS

PROCEDURE ABRIRCUENTA(
        CU_IBAN             CUENTA.IBAN%TYPE,         
        CU_SWIFT            CUENTA.SWIFT%TYPE,        
        CU_TIPO             CUENTA_FINTECH.CLASIFICACION%TYPE,
        CU_CLAS             CUENTA_FINTECH.CLASIFICACION%TYPE,
        CU_COMISION         SEGREGADA.COMISION%TYPE,   
        ID_CLIENTE          CLIENTE.ID%TYPE,           
        CREF_IBAN           CUENTA.IBAN%TYPE) AS   
    ESTADO_C    CLIENTE.ESTADO%TYPE;
    N_CUENTAS   INT;
    X_CLIENTE   INT;
    X_CREF_IBAN INT; --PARA COMPROBAR QUE EXISTE CUENTA REFERENCIA (EN TABLA)
    BEGIN
        -- VALORES VARIABLES
        SELECT ESTADO INTO ESTADO_C FROM CLIENTE WHERE ID_CLIENTE = CLIENTE.ID;
        IF (UPPER(ESTADO_C) = 'BAJA') OR (ESTADO_C IS NULL) OR (CU_IBAN IS NULL) THEN
            RAISE PARAMETROS_INCORRECTOS_EXCEPTION;
        END IF;
        
        SELECT COUNT(*) INTO N_CUENTAS FROM CUENTA WHERE CUENTA.IBAN = CU_IBAN;
        IF N_CUENTAS > 0 THEN
            RAISE CUENTA_EXISTENTE_EXCEPTION;
        END IF;
        
        SELECT COUNT(*) INTO X_CREF_IBAN FROM CUENTA_REFERENCIA WHERE CUENTA_REFERENCIA.IBAN = CREF_IBAN;
        --
        INSERT INTO CUENTA(IBAN, SWIFT) VALUES(CU_IBAN, CU_SWIFT);
        
        INSERT INTO CUENTA_FINTECH(IBAN, ESTADO, FECHA_APERTURA, CLASIFICACION, CLIENTE_ID)
            VALUES(CU_IBAN, 'ALTA', CURRENT_DATE, CU_CLAS, ID_CLIENTE);
            
        -- CASO POOLED
        IF UPPER(CU_TIPO) LIKE 'POOLED' THEN
            INSERT INTO POOLED_ACCOUNT(IBAN) VALUES (CU_IBAN);
            --SI ES POOLED Y HAY CREF, INSERTAR REGISTRO EN DEPOSITADA_EN
            IF X_CREF_IBAN > 0 THEN
                INSERT INTO DEPOSITADA_EN(SALDO, CUENTA_REFERENCIA_IBAN, POOLED_ACCOUNT_IBAN)
                VALUES (0, CREF_IBAN, CU_IBAN);
            END IF;
        
        -- CASO SEGREGADA
        ELSIF UPPER(CU_TIPO) LIKE 'SEGREGADA' THEN
            --PARAMETROS OBLIGATORIOS SI ES SEGREGADA:
            IF CREF_IBAN IS NULL THEN
                RAISE PARAMETROS_INCORRECTOS_EXCEPTION;
            END IF;
            --INSERT INTO SEGREGADA. CUENTA REF OBLIGATORIO
            IF X_CREF_IBAN > 0 THEN
                INSERT INTO SEGREGADA(IBAN, COMISION, CUENTA_REFERENCIA_IBAN)
                    VALUES(CU_IBAN, CU_COMISION, CREF_IBAN);
            ELSE
                
                RAISE PARAMETROS_INCORRECTOS_EXCEPTION;
            END IF;
        ELSE
            RAISE PARAMETROS_INCORRECTOS_EXCEPTION;
        END IF;    
        
    EXCEPTION
        WHEN OTHERS THEN
            RAISE;
    
END ABRIRCUENTA;


--==========
PROCEDURE CERRARCUENTA(CU_IBAN CUENTA.IBAN%TYPE) AS
    SUMA_SALDO INT;
    X_CUENTA   INT;
    TIPO       CUENTA_FINTECH.CLASIFICACION%TYPE; -- PARA VER SI ES POOLED O SEGREGADA. SI NO, NO HACE NADA.
    
    BEGIN
        -- CUENTA EXISTENTE? TIPO POOLED O SEGREGADA?
        SELECT COUNT(*) INTO X_CUENTA FROM SEGREGADA WHERE IBAN = CU_IBAN;
        IF X_CUENTA > 0 THEN
            TIPO := 'SEGREGADA';
            ELSE
                SELECT COUNT(*) INTO X_CUENTA FROM POOLED_ACCOUNT WHERE IBAN = CU_IBAN;
                IF X_CUENTA > 0 THEN 
                    TIPO := 'POOLED';
                    ELSE 
                        --AQUI PODEIS CONTINUAR Y QUE SI ES FINTECH SIN SER POOLED O SEGREGADA SE DE DE BAJA
                        RAISE CUENTA_INCORRECTA_EXCEPTION;
                END IF;
        END IF;
        
        -- COMPROBAR QUE SALDO ES 0
        IF TIPO = 'SEGREGADA' THEN
            SELECT SALDO INTO SUMA_SALDO 
            FROM CUENTA_REFERENCIA
            WHERE IBAN = CU_IBAN;
        ELSIF TIPO = 'POOLED' THEN
            SELECT SUM(SALDO) INTO SUMA_SALDO 
                FROM DEPOSITADA_EN 
                WHERE POOLED_ACCOUNT_IBAN = CU_IBAN;
        END IF;
        
        --MODIFICAR ESTADO Y FECHA_CIERRE
        IF SUMA_SALDO = 0 THEN
            UPDATE CUENTA_FINTECH SET
                ESTADO = 'BAJA',
                FECHA_CIERRE = CURRENT_DATE
            WHERE IBAN = CU_IBAN;
        ELSE
            RAISE SALDO_POSITIVO_EXCEPTION;
        END IF;
        
    EXCEPTION
        WHEN OTHERS THEN
            RAISE;
            
END CERRARCUENTA;

END PK_GESTION_CUENTAS;
/
